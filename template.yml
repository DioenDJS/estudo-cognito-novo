AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: estudo-cognito-novo

Parameters:
  Environment:
    Type: "String"
    Default: "development"
    AllowedValues: ["development", "production"]

Mappings:
  Environments:
    development:
#      AUTH_PROVIDER_URL: "parameters///estudo-cognito-novo/auth_provider_x509_cert_url"
#      AUTH_URI: "parameters///estudo-cognito-novo/auth_uri"
#      CLIENT_EMAIL: "parameters///estudo-cognito-novo/client_email"
#      CLIENT_ID: "parameters///estudo-cognito-novo/client_id"
#      CLIENT_CERT_URL: "parameters///estudo-cognito-novo/client_x509_cert_url"
#      PRIVATE_KEY: "parameters///estudo-cognito-novo/private_key"
#      PRIVATE_KEY_ID: "parameters///estudo-cognito-novo/private_key_id"
#      PROJECT_ID: "parameters///estudo-cognito-novo/project_id"
#      TOKEN_URI: "parameters///estudo-cognito-novo/token_uri"
      QueuePrefix: Development
      ExtractorsEnabled: true
      LoadersEnabled: true
      ResourceSufix: dev-suffix
    production:
      QueuePrefix: Production
      ExtractorsEnabled: true
      LoadersEnabled: true
      ResourceSufix: prod-suffix

Globals:
  Function:
    Runtime: python3.9
    MemorySize: 256
    Timeout: 600
    Layers:
      - Ref: DepLayer
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment

Resources:
  DepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Join [ "-", [ "estudo-cognito-novo-dependencies", !Ref Environment ] ]
      Description: Layer com as dependencias python especificadas no requirements.txt
      ContentUri: dependencies
      CompatibleRuntimes:
        - python3.9
      LicenseInfo: "MIT"

  EstudoCognitoNovoApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Join ["-", [!Ref Environment, "estudo-cognito-novo-api"]]
      StageName: "v1"
      EndpointConfiguration:
        Type: REGIONAL
      Cors:
        AllowOrigin: "'*'"
        AllowMethods: "'POST, OPTIONS'"
        AllowHeaders: "'*'"

  SheetsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Join [ "", [ !FindInMap [ Environments, !Ref Environment, QueueSufix ], "SheetsQueue.fifo" ] ]
      FifoQueue: true
      ContentBasedDeduplication: true
      VisibilityTimeout: 60

  EstudoCognitoNovoQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        !Join [
          "",
          [
            !FindInMap [Environments, !Ref Environment, QueuePrefix],
            "EstudoCognitoNovoQueue.fifo",
          ],
        ]
      FifoQueue: true
      ContentBasedDeduplication: true
      VisibilityTimeout: 60

  CognitoAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: CognitoUserPoolAuthorizer
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      RestApiId: !Ref EstudoCognitoNovoApi
      ProviderARNs:
        - !Sub arn:aws:cognito-idp:us-east-2:637423655019:userpool/us-east-2_8rmbOKvEM

  EmailExtract:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: handlers.extractor.email_extract.lambda_handler
      FunctionName:
        !Join ["-", ["email-extract", !Ref Environment]]
      Policies:
        - AWSLambda_FullAccess
        - AmazonRDSFullAccess
        - AmazonSSMReadOnlyAccess
        - AmazonSQSFullAccess
      Events:
        PostApiEvent:
          Type: Api
          Properties:
            Path: /email
            Method: post
            RestApiId: !Ref EstudoCognitoNovoApi

  PlanilhaExtract:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: handlers.extractor.planilha_extract.lambda_handler
      FunctionName: !Join [ "-", [ "planilha-extract", !FindInMap [ Environments, !Ref Environment, ResourceSufix ] ] ]
      Policies:
        - AWSLambda_FullAccess
        - AmazonRDSFullAccess
        - AmazonSSMReadOnlyAccess
        - AmazonSQSFullAccess
      Events:
        ScheduleEvent:
          Type: Schedule
          Properties:
            Description: "Atualiza"
            Schedule: cron(* * * * ? *)

  PlanilhaLoad:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: handlers.loader.planilha_load.lambda_handler
      FunctionName: !Join ["-", ["planilha-load", !FindInMap [Environments, !Ref Environment, ResourceSufix]]]
      ReservedConcurrentExecutions: 2
      Timeout: 60
      Policies:
        - AWSLambda_FullAccess
        - AmazonSQSFullAccess
        - AmazonRDSFullAccess
        - AmazonSSMReadOnlyAccess
        - SecretsManagerReadWrite
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SheetsQueue.Arn
            BatchSize: 10
            FunctionResponseTypes:
              - ReportBatchItemFailures
