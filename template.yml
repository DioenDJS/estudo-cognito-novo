AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: estudo-cognito-novo

Parameters:
  Environment:
    Type: "String"
    Default: "development"
    AllowedValues: ["development", "production"]

Mappings:
  Environments:
    development:
      QueuePrefix: Development
      ExtractorsEnabled: true
      LoadersEnabled: true
      ResourceSufix: dev-suffix
    production:
      QueuePrefix: Production
      ExtractorsEnabled: true
      LoadersEnabled: true
      ResourceSufix: prod-suffix

Globals:
  Function:
    Runtime: python3.9
    MemorySize: 256
    Timeout: 600
    Layers:
      - Ref: DepLayer
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment

Resources:
  DepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Join [ "-", [ "estudo-cognito-novo-dependencies", !Ref Environment ] ]
      Description: Layer com as dependencias python especificadas no requirements.txt
      ContentUri: dependencies
      CompatibleRuntimes:
        - python3.9
      LicenseInfo: "MIT"

  EstudoCognitoNovoApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Join ["-", [!Ref Environment, "estudo-cognito-novo-api"]]
      StageName: "v1"
      EndpointConfiguration:
        Type: REGIONAL
      Cors:
        AllowOrigin: "'*'"
        AllowMethods: "'POST, OPTIONS'"
        AllowHeaders: "'*'"

  EstudoCognitoNovoQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        !Join [
          "",
          [
            !FindInMap [Environments, !Ref Environment, QueuePrefix],
            "EstudoCognitoNovoQueue.fifo",
          ],
        ]
      FifoQueue: true
      ContentBasedDeduplication: true
      VisibilityTimeout: 60
#
#  CognitoAuthorizer:
#    Type: AWS::ApiGateway::Authorizer
#    Properties:
#      Name: CognitoUserPoolAuthorizer
#      Type: COGNITO_USER_POOLS
#      IdentitySource: method.request.header.Authorization
#      RestApiId: !Ref EstudoCognitoNovoApi
#      ProviderARNs:
#        - !Sub arn:aws:cognito-idp:us-east-2:637423655019:userpool/us-east-2_8rmbOKvEM

  CognitoAuthorizer:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId: !Ref EstudoCognitoNovoApi
      AuthorizerCredentialsArn: "arn:aws:cognito-idp:us-east-2:637423655019:userpool/us-east-2_8rmbOKvEM"
      AuthorizerType: JWT
      IdentitySource:
        - "$request.header.Authorization"
      JwtConfiguration:
        Audience:
          - "4f65kq93p9dn2tma46dtnr8jiv"
        Issuer: "https://cognito-idp.us-east-2.amazonaws.com/us-east-2_8rmbOKvEM"
      Name: "CognitoAuthorizer"



  EmailExtract:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: handlers.extractor.email_extract.lambda_handler
      FunctionName:
        !Join ["-", ["email-extract", !Ref Environment]]
      Policies:
        - AWSLambda_FullAccess
        - AmazonRDSFullAccess
        - AmazonSSMReadOnlyAccess
        - AmazonSQSFullAccess
      Events:
        PostApiEvent:
          Type: Api
          Properties:
            Path: /webhook
            Method: post
            RestApiId: !Ref EstudoCognitoNovoApi

